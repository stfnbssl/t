$group
	+
	$if pkg.Build.redux.useThunk ||
		\b pkg.useApiMiddleware ||
		\b pkg.useThunkWithExtraArgument
		import { createStore, applyMiddleware } from 'redux'
		$if pkg.Build.redux.useThunk
			import thunk from 'redux-thunk'
		$if pkg.Build.useApiMiddleware
			import api from '../middleware/api'
		$if pkg.Build.redux.useThunkWithExtraAergument
			# in the api middleware we can store global objects
			# that give problems when stored in the redux state
			# see https://stackoverflow.com/questions/37221872/storing-global-object-outside-of-redux-store-in-react-redux-app
			# and https://github.com/reduxjs/redux-thunk
			import extraArguments from '../middleware/extraArguments'
	$else
		import { createStore } from 'redux'

	import rootReducer from './reducers'
	+
	const configureStore
		=>
			param preloadedState
			_ createStore
				@ rootReducer
				@ preloadedState
				$if pkg.Build.redux.useThunk || pkg.Build.useApiMiddleware || pkg.Build.redux.useThunkWithExtraAergument
					_ applyMiddleware
						$if pkg.Build.redux.useThunk
							@ thunk
						$if pkg.Build.useApiMiddleware
							@ api
						$if pkg.Build.redux.useThunkWithExtraAergument
							_ thunk.withExtraArgument
								@ extraArguments
	+
	export default configureStore

